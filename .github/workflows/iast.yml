name: PHPCrypfish Functional + IAST Testing

on:
  push:
    branches:
      - main

jobs:
  func-test:
    name: Functional Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build PHPCrypfish Image
        run: docker build -t phpcrypfish:latest .

      - name: Create isolated network
        run: docker network create --driver bridge isolated      

      - name: Run PHPCrypfish Container
        run: docker-compose up -d

      - name: Check host directory
        run: |
              pwd
              ls -la
              ls -la db/
              
      - name: Copy source code to PHPCrypfish container
        run: docker cp web2/. blowfish-apache:/var/www/html

      - name: Get AUT URL
        run: |
          URL=$(ip -f inet -o addr show docker0 | awk '{print $4}' | cut -d '/' -f 1)
          echo "URL=$URL" >> $GITHUB_ENV

      - name: Wait for MySQL to be ready
        run: |
          until nc -zv ${{ env.URL }} 3306; do echo "Waiting for MySQL to be ready..."; sleep 5; done

      - name: Copy source code to PHPCrypfish container
        run: docker cp web2/. blowfish-apache:/var/www/html

      - name: Obfuscate
        run: docker exec blowfish-apache php -r "PHPCrypfish::obfuscate('/var/www/html/');"

      - name: Check inside PHPCrypfish container
        run: |
          docker exec blowfish-apache ls -la /var/www/html/
          docker exec blowfish-apache cat /var/www/html/index.php
      #   docker exec blowfish-apache php /var/www/html/cek_koneksi.php

      - name: Check AUT URL
        run: |
          curl -L http://${{ env.URL }}/cek_koneksi.php   

      # - name: Check inside MySQL container
      #   run: |
      #    docker exec docker-mysql mysql -uroot -ppassword -hlocalhost
      
      - name: Context Setup
        # env:
        # Set a previously defined secret as an environment variable for this step:
        # Replace the "AUTURL" string in the context file with the real base64-encoded password:
        run: |
          sed -ie "s/AUTURL/${{ env.URL }}/" badcrud.context
          cat badcrud.context
          
      - name: ZAP Scan
        uses: hermanka/action-full-scan@master
        with:
          target: http://${{ env.URL }}
          network_name: isolated
          # Additional command line options
          # -j   runs the AJAX spider
          # -U   specifies which user to select from the context file
          cmd_options: -U "admin" -n badcrud.context
          
      - name: stop docker
        run: docker stop blowfish-apache

  sast:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Check host directory
        run: |
              pwd
              ls -la
              #ls -la db/

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}